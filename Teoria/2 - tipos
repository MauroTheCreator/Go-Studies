Go é uma linguagem de programação com tipos estáticos, isso significa que variáveis sempre tem um tipo
específico e ele não muda. A linguagem vem comm vários tipos, vamos ver com mais detalhes.

NUMBERS

Go tem vários tipos para representar números. Generalmente falando, dividimos os tipos numéricos em
dois grupos, os inteiros e os de ponto flutuante.

INTEGERS

Os tipos inteiros do Go são: uint8, uint16, uint32, uint64, int8, int16, int32 e int64.

8, 16, 32, 64 nós dizem quantos são os bits que eles vão ocupar na memória, uint significa "unsigned
int", ou seja, um inteiro sem sinal (apenas um número natural pode ser inserido em uma variável desse
tipo). Além disso, temos alguns apelidos para alguns tipos, o tipo byte equivale ao uint8 e o tipo
rune ao tipo int32.

Além de todos esses tipos temos os tipos que são dependentes da máquina, o int, uint e o uintptr. Eles
são dependentes das máquinas porque o tamanho deles depende da arquitetura da sua máquina.

Geralmente quando você vai trabalhar com inteiros você só vai usar o tipo int.

FLOATING-POINT NUMBERS

Números de ponto flutuante (ou simplesmente float) são números que contém partes decimais.

Computadores tem dificuldade para representar float numbers. Mas tenha em mente essas coisas:

- float numbers não são exatos.
- float numbers assim como os inteiros, tem um espaço na memória do computador. 
- além disso nos números, podemos ter representações diferentes como not-a-number, infinity, negative
infinity, etc.

Go tem dois tipos de float numbers, float32 e float64 (que também são referidos como float de precisão
e float de precisão dupla, respectivamente). Go também provê tipos para representar números complexos,
o complex64 e o complex128 são os tipos.

Geralmente nós utilizaremos o float64 quando formos trabalhar com float numbers.

EXEMPLOS

Vamos escrever um programa pra dar uma praticada,

    package main

    import "fmt"

    func main() {
        fmt.Println("1 + 1 = ", 1 + 1)
    }

A função Println transforma 1 + 1 em uma string e depois concatena as duas strings.

Os operadores aritmétcos que Go suporta são: +, -, *, /, %

Também temos o módulo math da linguagem Go, que provê funções e operadores matemáticos mais complexos, com
apenas essa biblioteca podemos criar programas muito mais sofisticados.
