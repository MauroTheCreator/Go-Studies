CONHECIMENTOS BÁSICOS DE GO

Go é uma linguagem de programação compilada da mesma família da linguagem C, contudo, seu tempo de compilação é muito mais
rápido que outras linguagens da mesma família. Ela possui apenas 25 palavras chave reservadas:

    break    default      func    interface    select
    case     defer        go      map          struct
    chan     else         goto    package      switch
    const    fallthrough  if      range        type
    continue for          import  return       var

Go é uma linguagem concisa e com um design belo, vamos entender um pouco mais.

HELLO, GO

Antes de começar a desenvolver aplicações mais complexas em Go precisamos saber escrever programas simples. 

    package main

    import "fmt"

    func main() {
        fmt.Printf("Hello, world or 你好，世界 or καλημ ́ρα κóσμ or こんにちは世界\n")
    }

Saída:
Hello, world or 你好，世界 or καλημ ́ρα κóσμ or こんにちは世界

Descrição:
1. A primeira coisa que precisamos saber é que programas em Go são divididos em pacotes, identificados por "package". 
   No código vemos que o programa é do package main, essa palavra main indica que esse pacote será compilado em um programa
   e não em um pacote .a
   Todo programa em Go tem um, e somente um pacote main e esse pacote main precisa ter uma função main sem valor de retorno
   ou argumentos.

2. Printamos a mensagem usando a função Println() que está dentro do pacote fmt, que é importado por "import "fmt"". A maneira
   de pensar nos pacotes Go é similar ao Python, e trás as vantagens da modularidade e da reusabilidade.

3. O corpo da função está entre chaves {} como Java ou C/C++.

4. O nome do pacote e a pasta que o contém podem ser diferentes, o nome do pacote vem de <pkgName> em package <pkgName> e não 
   do nome da pasta.

5. A linguagem Go tem suporte nativo à UTF-8, então não precisamos nos preocupar com caracteres dessa tabela.
